# Maven package Java project Web App to Linux on Azure
- task: AzureWebApp@1
  inputs:
    azureSubscription: 'Azure subscription 1(8fa70147-7f4b-4b90-951c-c2000054c769)'
    appType: 'webAppLinux'
    appName: 'AZ-DEVOPS-HW-D3-APP'
    deployToSlotOrASE: true
    resourceGroupName: 'AZ-DEVOPS-HW-D3-RG'
    slotName: 'production'
    package: '$(System.DefaultWorkingDirectory)/**/*.zip'
- task: AzureWebApp@1
  inputs:
    azureSubscription: 'Azure subscription 1(8fa70147-7f4b-4b90-951c-c2000054c769)'
    appType: 'webAppLinux'
    appName: 'AZ-DEVOPS-HW-D3-APP'
    package: '$(System.DefaultWorkingDirectory)/**/*.zip'
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
# Build your Java project and deploy it to Azure as a Linux web app
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main
- task: MavenAuthenticate@0
  inputs:
    artifactsFeeds: 'sathyashangar'

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '076c9449-f0fe-463d-8570-6daed2c27065'

  # Web app name
  webAppName: 'mySuperAwesomeApp'

  # Environment name
  environmentName: 'mySuperAwesomeApp'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'MyWebApp/pom.xml'

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)

    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployLinuxWebApp
    displayName: Deploy Linux Web App
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: mySuperAwesomeApp'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              package: '$(Pipeline.Workspace)/drop/**/target/*.?(war|jar)'
